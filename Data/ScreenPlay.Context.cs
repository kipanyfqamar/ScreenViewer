//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScreenViewer.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ScreenPlayEntities : DbContext
    {
        public ScreenPlayEntities()
            : base("name=ScreenPlayEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<ScriptAction> ScriptActions { get; set; }
        public virtual DbSet<ScriptCalculation> ScriptCalculations { get; set; }
        public virtual DbSet<ScriptClause> ScriptClauses { get; set; }
        public virtual DbSet<ScriptDataView> ScriptDataViews { get; set; }
        public virtual DbSet<ScriptImage> ScriptImages { get; set; }
        public virtual DbSet<ScriptItem> ScriptItems { get; set; }
        public virtual DbSet<ScriptItemKey> ScriptItemKeys { get; set; }
        public virtual DbSet<ScriptItemSelector> ScriptItemSelectors { get; set; }
        public virtual DbSet<ScriptLayout> ScriptLayouts { get; set; }
        public virtual DbSet<ScriptLayoutDetail> ScriptLayoutDetails { get; set; }
        public virtual DbSet<ScriptLink> ScriptLinks { get; set; }
        public virtual DbSet<ScriptLookup> ScriptLookups { get; set; }
        public virtual DbSet<ScriptLookupDetail> ScriptLookupDetails { get; set; }
        public virtual DbSet<ScriptMenu> ScriptMenus { get; set; }
        public virtual DbSet<ScriptObject> ScriptObjects { get; set; }
        public virtual DbSet<ScriptObjectDetail> ScriptObjectDetails { get; set; }
        public virtual DbSet<ScriptProject> ScriptProjects { get; set; }
        public virtual DbSet<ScriptProjectVariable> ScriptProjectVariables { get; set; }
        public virtual DbSet<ScriptProjectWorkflow> ScriptProjectWorkflows { get; set; }
        public virtual DbSet<ScriptQuestion> ScriptQuestions { get; set; }
        public virtual DbSet<ScriptQuestionare> ScriptQuestionares { get; set; }
        public virtual DbSet<ScriptQuestionareDetail> ScriptQuestionareDetails { get; set; }
        public virtual DbSet<ScriptSection> ScriptSections { get; set; }
        public virtual DbSet<ScriptSectionLayout> ScriptSectionLayouts { get; set; }
        public virtual DbSet<ScriptTextHTML> ScriptTextHTMLs { get; set; }
        public virtual DbSet<ScriptValidator> ScriptValidators { get; set; }
        public virtual DbSet<ScriptVariable> ScriptVariables { get; set; }
        public virtual DbSet<ScriptVariableDetail> ScriptVariableDetails { get; set; }
        public virtual DbSet<ScriptWorkflow> ScriptWorkflows { get; set; }
        public virtual DbSet<ScriptHTML> ScriptHTMLs { get; set; }
        public virtual DbSet<WorkflowLayout> WorkflowLayouts { get; set; }
        public virtual DbSet<ScriptDash> ScriptDashes { get; set; }
        public virtual DbSet<ScriptTask> ScriptTasks { get; set; }
    
        public virtual ObjectResult<KBSearch_Result> KBSearch(string searchList, string clientID)
        {
            var searchListParameter = searchList != null ?
                new ObjectParameter("SearchList", searchList) :
                new ObjectParameter("SearchList", typeof(string));
    
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KBSearch_Result>("KBSearch", searchListParameter, clientIDParameter);
        }
    }
}
